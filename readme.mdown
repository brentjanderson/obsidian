Obsidian Push Library
=====================

This library is a pretty simple implementation of Node.js, MongoDB, and Websockets.
It's not been tested and is provided AS-IS, but you may find it very useful as a starting
point for browser-based projects that need push notifications, state saving, etc.

Quickstart Guide
----------------

After cloning the source to your system, you'll need to install the following:
* [node](http://nodejs.org) -- The thing that runs it all
* [mongodb](http://mongodb.org) -- I use mongo to cache system states

You will also need a browser that supports websockets.

Run `npm install` in the server directory to install all the dependencies you'll need.

I have this platform up and running successfully on Amazon's AWS, but a local installation is workable.
Just be sure to sure to change the address in the client side script push.js to point to
your own push server (By default, the client script push.js points to localhost:8888).

Once you have started the node server (node server/server.js) successfully,
feel free to take client/demo.html for a spin to play around with the push commands available.

You now have the following javascript calls at your command on the client side:

* netSubscribe(key, callbackFunction[, noCallbackNow]) -- Start listening for updates to property `key` and fire callbackFunction(newValue) when changes happen
    - Optional noCallbackNow parameter accepts true/anything else. If true, then callbackFunction will not be called in conjunction with the subscription.
* netCommit(key, value) -- Update the key and the value; this will trigger updates on all subscribers, both locally and remotely
* netUnsubscribe(key, callbackFunction) -- Stop listening for updates to a property.
* netUnsubscribe(key) -- Stop listening for all updates on a given property
* netUnsubscribe() -- Stop listening for all updates